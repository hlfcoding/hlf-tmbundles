<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>changed</key>
	<dict>
		<key>fileTypes</key>
		<array>
			<string>js</string>
		</array>
		<key>foldingStartMarker</key>
		<string>/\*\*(?!\*) [A-Z]|\{\s*($|/\*(?!.*?\*/.*\S))</string>
		<key>foldingStopMarker</key>
		<string>(?&lt;!\*)\*\*/|^\s*\}</string>
		<key>patterns</key>
		<array>
			<dict>
				<key>comment</key>
				<string>Since this needs to override string, this needs to go before it.</string>
				<key>match</key>
				<string>^\s*"use strict"\s*$</string>
				<key>name</key>
				<string>keyword.other.directive.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Added `let` from Harmony.</string>
				<key>match</key>
				<string>\b(break|case|catch|continue|default|do|else|finally|for|goto|if|import|let|package|return|switch|throw|try|while)\b</string>
				<key>name</key>
				<string>keyword.control.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>&lt;\!--</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.html.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>
              [CONFLICT] Only highlight the start and end markers. 
              For CDATA? Make sure to include in your theme!
              </string>
				<key>end</key>
				<string>--&gt;</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.html.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>comment.block.html.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Note each match is exact. A better way?</string>
				<key>match</key>
				<string>\b(delete|in|instanceof|new|typeof|with)\b|!|%|&amp;|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|&amp;&amp;|\|\||\?\:|\?|\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=</string>
				<key>name</key>
				<string>keyword.operator.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(this|super)\b</string>
				<key>name</key>
				<string>keyword.other.class.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(debugger)\b</string>
				<key>name</key>
				<string>keyword.other.environmentjs</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>/\*\*(?!/)</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Simple ranged search, where `/**/` is exempt.</string>
				<key>end</key>
				<string>\*/</string>
				<key>name</key>
				<string>comment.block.documentation.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>/\*</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Simple ranged search.</string>
				<key>end</key>
				<string>\*/</string>
				<key>name</key>
				<string>comment.block.js</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Simple search from end of line using wildcard.</string>
				<key>match</key>
				<string>(//).*$\n?</string>
				<key>name</key>
				<string>comment.line.double-slash.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\b(boolean|byte|char|class|double|enum|float|function|int|interface|long|short|var|void)\b</string>
				<key>name</key>
				<string>storage.type.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\b(const|export|extends|final|implements|native|private|protected|public|static|synchronized|throws|transient|volatile)\b</string>
				<key>name</key>
				<string>storage.modifier.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\btrue\b</string>
				<key>name</key>
				<string>constant.language.boolean.true.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\bfalse\b</string>
				<key>name</key>
				<string>constant.language.boolean.false.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\bnull\b</string>
				<key>name</key>
				<string>constant.language.null.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\b(Infinity|NaN|undefined)\b</string>
				<key>name</key>
				<string>constant.language.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
				<key>name</key>
				<string>constant.numeric.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\;</string>
				<key>name</key>
				<string>punctuation.terminator.statement.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\.</string>
				<key>name</key>
				<string>meta.delimiter.method.period.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Liberally allows trailing whitespace.</string>
				<key>match</key>
				<string>,[ |\t]*</string>
				<key>name</key>
				<string>meta.delimiter.object.comma.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\{|\}</string>
				<key>name</key>
				<string>meta.brace.curly.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&lt;=[=(:]|^|return|&amp;&amp;|\|\||!)\s*\(?(/)(?![/*+{}?])</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>
              [CONFLICT] Only match if preceded by certain things. Follows linting advice and 
              wraps an optional `()`.</string>
				<key>end</key>
				<string>(/)[igm]*\)?</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#simple-escaped-char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\(|\)</string>
				<key>name</key>
				<string>meta.brace.round.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Basic.</string>
				<key>match</key>
				<string>\[|\]</string>
				<key>name</key>
				<string>meta.brace.square.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>"</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>
              Simple range search. Tokenize the quotes. Add complex regex for utf 
              escape. Placed at the head to give priority.
              </string>
				<key>end</key>
				<string>"</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.double.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped-char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>'</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>
              Simple range search. Tokenize the quotes. Add complex regex for utf
              escape. Placed at the head to give priority.
              </string>
				<key>end</key>
				<string>'</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.single.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#escaped-char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>comment</key>
				<string>Language globals. Basic</string>
				<key>match</key>
				<string>\b(JSON|Math)\b</string>
				<key>name</key>
				<string>support.global.language.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Language globals. Basic</string>
				<key>match</key>
				<string>\b(document|event|window|screen)\b</string>
				<key>name</key>
				<string>support.global.dom.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Language non-constructor functions only. Basic</string>
				<key>match</key>
				<string>\b(decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|uneval)\b</string>
				<key>name</key>
				<string>support.function.language.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Language constructors only. Basic.</string>
				<key>match</key>
				<string>\b(Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|SyntaxError|TypeError|URIError)\b</string>
				<key>name</key>
				<string>support.type.class.language.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>DOM constructors only. Includes all dom, HTML, SVG, etc. Basic.</string>
				<key>match</key>
				<string>\b(Attr|CDATASection|CharacterData|Comment|DocumentFragment|DocumentType|DomConfiguration|DOM(Error|ErrorHandler|Exception|Implementation|ImplementationList|ImplementationRegistry|ImplementationSource|Locator|Object|String|StringList|TimeStamp|UserData|TokenList|SettableTokenList|StringMap)|Entity|EntityReference|MediaQueryList|MediaQueryListListener|NameList|NamedNodeMap|Node|NodeFilter|NodeIterator|NodeList|Notation|Plugin|PluginArray|ProcessingInstruction|SharedWorker|Text|TimeRanges|Treewalker|TypeInfo|UserDataHandler|Worker|WorkerGlobalScope|HTML(Document|Element|(Anchor|Applet|Audio|Area|Base|BaseFont|Body|BR|Button|Canvas|Directory|Div|DList|Embed|FieldSet|Font|Form|Frame|FrameSet|Head|Heading|Html|HR|IFrame|Image|Input|Keygen|Label|LI|Link|Map|Menu|Meta|Mod|Object|OList|OptGroup|Option|Output|Paragraph|Param|Pre|Quote|Script|Select|Source|Span|Style|Table|TableCaption|TableCell|TableDataCell|TableHeaderCell|TableCol|TableRow|TableSection|TextArea|Time|Title|Track|UList|Unknown|Video)Element|Collection|(All|FormControls|Options|Properties)Collection)|ElementTimeControl|TimeEvent|Canvas(RenderingContext2D|Gradient|Pattern|PixelArray)|TextMetrics|ImageData|NotifyAudioAvailableEvent|RadioNodeList|SVG(Document|Element|(A|AltGlyph|AltGlyphDef|AltGlyphItem|Animation|Animate|AnimateColor|AnimateMotion|AnimateTransform|Set|Circle|ClipPath|ColorProfile|Cursor|Defs|Desc|Ellipse|Filter|FEBlend|FEColorMatrix|FEComponentTransfer|FEComposite|FEConvolveMatrix|FEDiffuseLighting|FEDisplacementMap|FEDistantLight|FEFlood|FEGaussianBlur|FEImage|FEMerge|FEMergeNode|FEMorphology|FEOffset|FEPointLight|FESpecularLighting|FESpotLight|FETile|FETurbulence|ComponentTransferFunction|FEFuncR|FEFuncG|FEFuncB|FEFuncA|Font|FontFace|FontFaceFormat|FontFaceName|FontFaceSrc|FontFaceUri|ForeignObject|G|Glyph|GlyphRef|Gradient|LinearGradient|RadialGradient|HKern|Image|Line|Marker|Mask|Metadata|MissingGlyph|MPath|Path|Pattern|Polyline|Polygon|Rect|Script|Stop|Style|Switch|Symbol|Text|TextPath|Title|TRef|TSpan|Use|View|VKern)Element|Angle|Color|ICCColor|ElementInstance|ElementInstanceList|Length|LengthList|Matrix|Number|NumberList|Paint|Point|PointList|PreserveAspectRatio|Rect|StringList|Transform|TransformList|Animated(Angle|Boolean|Enumeration|Integer|Length|LengthList|Number|NumberList|PreserveAspectRatio|Rect|String|TransformList)|Path(SegList|Seg|Seg(ArcAbs|ArcRel|ClosePath|Curve(toCubicAbs|toCubicRel|toCubicSmoothAbs|toCubicSmoothRel|toQuadraticAbs|toQuadraticRel|toQuadraticSmoothAbs|toQuadraticSmoothRel)|Line(toAbs|toHorizontalAbs|toHorizontalRel|toRel|toVerticalAbs|toVerticalRel)|MovetoAbs|MovetoRel))|FilterPrimitiveStandardAttributes|AnimatedPathData))\b</string>
				<key>name</key>
				<string>support.type.class.dom.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Matches `THIS_CONSTANT`.</string>
				<key>match</key>
				<string>\b[A-Z_]{2,}\b</string>
				<key>name</key>
				<string>constant.other.application.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\$</string>
				<key>name</key>
				<string>support.global.query.js</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.class.declaration.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\b([A-Z][a-z][a-zA-Z0-9_]*)\s*(=)</string>
				<key>name</key>
				<string>meta.entity.name.class.js</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.class.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\b([A-Z][a-z][a-zA-Z0-9_]*)\b</string>
				<key>name</key>
				<string>meta.entity.name.class.js</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.property.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>(?&lt;!\?|\/|'|")[^?/{'"]*\b(\$*[a-z0-9_][a-zA-Z0-9_]*)(:)</string>
				<key>name</key>
				<string>meta.entity.name.property.declaration.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?:(\$*[a-z0-9_][a-zA-Z0-9_]*)\s*(=)\s*)?\b(function)\b\s*(\$*[a-z0-9_][a-zA-Z0-9_]*)?\b</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>storage.type.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>end</key>
				<string>({)</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>meta.brace.curly.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.entity.name.function.declaration.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>variable.parameter.js</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>meta.delimiter.object.comma.js</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(\$|\$*[a-zA-Z0-9_]+)(,)?\)?</string>
						<key>name</key>
						<string>meta.variable.parameter.js</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\b(ELEMENT_NODE|ATTRIBUTE_NODE|TEXT_NODE|CDATA_SECTION_NODE|ENTITY_REFERENCE_NODE|ENTITY_NODE|PROCESSING_INSTRUCTION_NODE|COMMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE|DOCUMENT_FRAGMENT_NODE|NOTATION_NODE|INDEX_SIZE_ERR|DOMSTRING_SIZE_ERR|HIERARCHY_REQUEST_ERR|WRONG_DOCUMENT_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR|NOT_SUPPORTED_ERR|INUSE_ATTRIBUTE_ERR)\b</string>
				<key>name</key>
				<string>support.constant.dom.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\b(console)\b</string>
				<key>name</key>
				<string>entity.name.type.object.js.debug</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>meta.delimiter.method.period.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\bconsole(\.)(?:warn|info|log|error|time|timeEnd|assert)\b</string>
				<key>name</key>
				<string>support.function.js.debug</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\b(extend|arguments|hasOwnProperty)\b</string>
				<key>name</key>
				<string>support.function.dom.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\b(_this|Self|base|console)\b</string>
				<key>name</key>
				<string>support.object.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\b(s(h(ift|ow(Mod(elessDialog|alDialog)|Help))|croll(X|By(Pages|Lines)?|Y|To)?|t(op|rike)|i(n|zeToContent|debar|gnText)|ort|u(p|b(str(ing)?)?)|pli(ce|t)|e(nd|t(Re(sizable|questHeader)|M(i(nutes|lliseconds)|onth)|Seconds|Ho(tKeys|urs)|Year|Cursor|Time(out)?|Interval|ZOptions|Date|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(ome|andleEvent)|navigate|c(har(CodeAt|At)|o(s|n(cat|textual|firm)|mpile)|eil|lear(Timeout|Interval)?|a(ptureEvents|ll)|reate(StyleSheet|Popup|EventObject))|t(o(GMTString|S(tring|ource)|U(TCString|pperCase)|Lo(caleString|werCase))|est|a(n|int(Enabled)?))|i(s(NaN|Finite)|ndexOf|talics)|d(isableExternalCapture|ump|etachEvent)|u(n(shift|taint|escape|watch)|pdateCommands)|j(oin|avaEnabled)|p(o(p|w)|ush|lugins.refresh|a(ddings|rse(Int|Float)?)|r(int|ompt|eference))|e(scape|nableExternalCapture|val|lementFromPoint|x(p|ec(Script|Command)?))|valueOf|UTC|queryCommand(State|Indeterm|Enabled|Value)|f(i(nd|le(ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(nt(size|color)|rward)|loor|romCharCode)|watch|l(ink|o(ad|g)|astIndexOf)|a(sin|nchor|cos|t(tachEvent|ob|an(2)?)|pply|lert|b(s|ort))|r(ou(nd|teEvents)|e(size(By|To)|calc|turnValue|place|verse|l(oad|ease(Capture|Events)))|andom)|g(o|et(ResponseHeader|M(i(nutes|lliseconds)|onth)|Se(conds|lection)|Hours|Year|Time(zoneOffset)?|Da(y|te)|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Da(y|te)|FullYear)|FullYear|A(ttention|llResponseHeaders)))|m(in|ove(B(y|elow)|To(Absolute)?|Above)|ergeAttributes|a(tch|rgins|x))|b(toa|ig|o(ld|rderWidths)|link|ack)|constructor)\b(?=\()</string>
				<key>name</key>
				<string>support.function.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\b(s(ub(stringData|mit)|plitText|e(t(NamedItem|Attribute(Node)?)|lect))|has(ChildNodes|Feature)|namedItem|c(l(ick|o(se|neNode))|reate(C(omment|DATASection|aption)|T(Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(ntityReference|lement)|Attribute))|tabIndex|i(nsert(Row|Before|Cell|Data)|tem)|open|delete(Row|C(ell|aption)|T(Head|Foot)|Data)|focus|write(ln)?|a(dd|ppend(Child|Data))|re(set|place(Child|Data)|move(NamedItem|Child|Attribute(Node)?)?)|get(NamedItem|Element(sBy(Name|TagName)|ById)|Attribute(Node)?)|blur)\b(?=\()</string>
				<key>name</key>
				<string>support.function.dom.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>(?&lt;=\.)(s(ystemLanguage|cr(ipts|ollbars|een(X|Y|Top|Left))|t(yle(Sheets)?|atus(Text|bar)?)|ibling(Below|Above)|ource|uffixes|e(curity(Policy)?|l(ection|f)))|h(istory|ost(name)?|as(h|Focus))|y|X(MLDocument|SLDocument)|n(ext|ame(space(s|URI)|Prop))|M(IN_VALUE|AX_VALUE)|c(haracterSet|o(n(structor|trollers)|okieEnabled|lorDepth|mp(onents|lete))|urrent|puClass|l(i(p(boardData)?|entInformation)|osed|asses)|alle(e|r)|rypto)|t(o(olbar|p)|ext(Transform|Indent|Decoration|Align)|ags)|SQRT(1_2|2)|i(n(ner(Height|Width)|put)|ds|gnoreCase)|zIndex|o(scpu|n(readystatechange|Line)|uter(Height|Width)|p(sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(i(splay|alog(Height|Top|Width|Left|Arguments)|rectories)|e(scription|fault(Status|Ch(ecked|arset)|View)))|u(ser(Profile|Language|Agent)|n(iqueID|defined)|pdateInterval)|_content|p(ixelDepth|ort|ersonalbar|kcs11|l(ugins|atform)|a(thname|dding(Right|Bottom|Top|Left)|rent(Window|Layer)?|ge(X(Offset)?|Y(Offset)?))|r(o(to(col|type)|duct(Sub)?|mpter)|e(vious|fix)))|e(n(coding|abledPlugin)|x(ternal|pando)|mbeds)|v(isibility|endor(Sub)?|Linkcolor)|URLUnencoded|P(I|OSITIVE_INFINITY)|f(ilename|o(nt(Size|Family|Weight)|rmName)|rame(s|Element)|gColor)|E|whiteSpace|l(i(stStyleType|n(eHeight|kColor))|o(ca(tion(bar)?|lName)|wsrc)|e(ngth|ft(Context)?)|a(st(M(odified|atch)|Index|Paren)|yer(s|X)|nguage))|a(pp(MinorVersion|Name|Co(deName|re)|Version)|vail(Height|Top|Width|Left)|ll|r(ity|guments)|Linkcolor|bove)|r(ight(Context)?|e(sponse(XML|Text)|adyState))|global|x|m(imeTypes|ultiline|enubar|argin(Right|Bottom|Top|Left))|L(N(10|2)|OG(10E|2E))|b(o(ttom|rder(Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(Color|Image)))\b</string>
				<key>name</key>
				<string>support.constant.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>(?&lt;=\.)(s(hape|ystemId|c(heme|ope|rolling)|ta(ndby|rt)|ize|ummary|pecified|e(ctionRowIndex|lected(Index)?)|rc)|h(space|t(tpEquiv|mlFor)|e(ight|aders)|ref(lang)?)|n(o(Resize|tation(s|Name)|Shade|Href|de(Name|Type|Value)|Wrap)|extSibling|ame)|c(h(ildNodes|Off|ecked|arset)?|ite|o(ntent|o(kie|rds)|de(Base|Type)?|l(s|Span|or)|mpact)|ell(s|Spacing|Padding)|l(ear|assName)|aption)|t(ype|Bodies|itle|Head|ext|a(rget|gName)|Foot)|i(sMap|ndex|d|m(plementation|ages))|o(ptions|wnerDocument|bject)|d(i(sabled|r)|o(c(type|umentElement)|main)|e(clare|f(er|ault(Selected|Checked|Value)))|at(eTime|a))|useMap|p(ublicId|arentNode|r(o(file|mpt)|eviousSibling))|e(n(ctype|tities)|vent|lements)|v(space|ersion|alue(Type)?|Link|Align)|URL|f(irstChild|orm(s)?|ace|rame(Border)?)|width|l(ink(s)?|o(ngDesc|wSrc)|a(stChild|ng|bel))|a(nchors|c(ce(ssKey|pt(Charset)?)|tion)|ttributes|pplets|l(t|ign)|r(chive|eas)|xis|Link|bbr)|r(ow(s|Span|Index)|ules|e(v|ferrer|l|adOnly))|m(ultiple|e(thod|dia)|a(rgin(Height|Width)|xLength))|b(o(dy|rder)|ackground|gColor))\b</string>
				<key>name</key>
				<string>support.constant.dom.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\bon(R(ow(s(inserted|delete)|e(nter|xit))|e(s(ize(start|end)?|et)|adystatechange))|Mouse(o(ut|ver)|down|up|move)|B(efore(cut|deactivate|u(nload|pdate)|p(aste|rint)|editfocus|activate)|lur)|S(croll|top|ubmit|elect(start|ionchange)?)|H(over|elp)|C(hange|ont(extmenu|rolselect)|ut|ellchange|l(ick|ose))|D(eactivate|ata(setc(hanged|omplete)|available)|r(op|ag(start|over|drop|en(ter|d)|leave)?)|blclick)|Unload|P(aste|ropertychange)|Error(update)?|Key(down|up|press)|Focus|Load|A(ctivate|fter(update|print)|bort))\b</string>
				<key>name</key>
				<string>support.function.event-handler.js</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.app.function.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.brace.round.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>\b(\$*[a-z0-9_][a-zA-Z0-9_]*)(\()</string>
				<key>name</key>
				<string>meta.function.call.js</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.global.query.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.app.property.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>meta.delimiter.method.period.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Dirty.</string>
				<key>match</key>
				<string>(?&lt;=\.)(\$)?([a-z0-9_][a-zA-Z0-9_]*)(\.)?</string>
				<key>name</key>
				<string>meta.property.js</string>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<key>escaped-char</key>
			<dict>
				<key>match</key>
				<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
				<key>name</key>
				<string>constant.character.escape.js</string>
			</dict>
		</dict>
	</dict>
	<key>deleted</key>
	<array>
		<string>keyEquivalent</string>
	</array>
	<key>isDelta</key>
	<true/>
	<key>uuid</key>
	<string>93E017CC-6F27-11D9-90EB-000D93589AF6</string>
</dict>
</plist>
